

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 29 05:48:07 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	10F222
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x1C,4
    12  0000                     
    13                           ; Version 1.42
    14                           ; Generated 13/04/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC10F222 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0006                     _TRISGPIO	set	6
    57  0000                     _OPTION	set	0
    58  0030                     _GP0	set	48
    59  0031                     _GP1	set	49
    60  0032                     _GP2	set	50
    61  003F                     _ANS1	set	63
    62  003E                     _ANS0	set	62
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  001                     start_initialization:	
    68  001                     __initialization:	
    69  001                     end_of_initialization:	
    70                           ;End of C runtime variable initialization code
    71                           
    72  001                     __end_of__initialization:	
    73  001  064                	clrf	4
    74  002  BC4                	ljmp	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMMON
    77  000                     __pcstackCOMMON:	
    78  000                     ??_Delay_us:	
    79  000                     ??_main:	
    80                           ; 1 bytes @ 0x0
    81                           
    82                           
    83                           	psect	cstackBANK0
    84  009                     __pcstackBANK0:	
    85                           ; 1 bytes @ 0x0
    86                           
    87  009                     ?_Delay_ms:	
    88  009                     ?_Delay_us:	
    89                           ; 1 bytes @ 0x0
    90                           
    91  009                     ?_main:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  009                     Delay_ms@DELAY_CNT:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  009                     Delay_us@DELAY_CNT:	
    98                           ; 2 bytes @ 0x0
    99                           
   100                           
   101                           ; 2 bytes @ 0x0
   102  009                     	ds	2
   103  00B                     ??_Delay_ms:	
   104  00B                     Delay_us@i:	
   105                           ; 1 bytes @ 0x2
   106                           
   107                           
   108                           ; 2 bytes @ 0x2
   109  00B                     	ds	2
   110  00D                     Delay_ms@i:	
   111                           
   112                           ; 2 bytes @ 0x4
   113  00D                     	ds	2
   114                           
   115                           	psect	maintext
   116  1C4                     __pmaintext:	
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 27 in file "main.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;		None
   125 ;; Auto vars:     Size  Location     Type
   126 ;;		None
   127 ;; Return value:  Size  Location     Type
   128 ;;                  1   32[None  ] void 
   129 ;; Registers used:
   130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : B00/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMMON   BANK0
   136 ;;      Params:         0       0
   137 ;;      Locals:         0       0
   138 ;;      Temps:          0       0
   139 ;;      Totals:         0       0
   140 ;;Total ram usage:        0 bytes
   141 ;; Hardware stack levels required when called:    1
   142 ;; This function calls:
   143 ;;		_Delay_ms
   144 ;;		_Delay_us
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           
   151                           ;psect for function _main
   152  1C4                     _main:	
   153                           
   154                           ;main.c: 29: OPTION = 0b11000000;
   155                           
   156                           ;incstack = 0
   157                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+pclath+cstack]
   158  1C4  CC0                	movlw	192
   159  1C5  002                	option
   160                           
   161                           ;main.c: 30: TRISGPIO = 0b1000;
   162  1C6  C08                	movlw	8
   163  1C7  006                	tris	6
   164                           
   165                           ;main.c: 31: ANS0 = 0;
   166  1C8  4C7                	bcf	7,6	;volatile
   167                           
   168                           ;main.c: 32: ANS1 = 0;
   169  1C9  4E7                	bcf	7,7	;volatile
   170                           
   171                           ;main.c: 34: GP2=0; GP1=0; GP0=0;
   172  1CA  446                	bcf	6,2	;volatile
   173  1CB  426                	bcf	6,1	;volatile
   174  1CC  406                	bcf	6,0	;volatile
   175  1CD                     l484:	
   176                           ;main.c: 36: while(1) {
   177                           
   178                           
   179                           ;main.c: 38: GP2=1; GP1=1; GP0=1;
   180  1CD  546                	bsf	6,2	;volatile
   181  1CE  526                	bsf	6,1	;volatile
   182  1CF  506                	bsf	6,0	;volatile
   183                           
   184                           ;main.c: 39: Delay_us(1500);
   185  1D0  CDC                	movlw	220
   186  1D1  029                	movwf	Delay_us@DELAY_CNT
   187  1D2  C05                	movlw	5
   188  1D3  02A                	movwf	Delay_us@DELAY_CNT+1
   189  1D4  903                	fcall	entry__Delay_us
   190                           
   191                           ;main.c: 40: GP2=0; GP1=0; GP0=0;
   192  1D5  446                	bcf	6,2	;volatile
   193  1D6  426                	bcf	6,1	;volatile
   194  1D7  406                	bcf	6,0	;volatile
   195                           
   196                           ;main.c: 41: Delay_ms(1);
   197  1D8  C01                	movlw	1
   198  1D9  029                	movwf	Delay_ms@DELAY_CNT
   199  1DA  C00                	movlw	0
   200  1DB  02A                	movwf	Delay_ms@DELAY_CNT+1
   201  1DC  904                	fcall	entry__Delay_ms
   202  1DD  BCD                	goto	l484
   203  1DE                     __end_of_main:	
   204                           
   205                           	psect	text1
   206  1AB                     __ptext1:	
   207 ;; *************** function _Delay_us *****************
   208 ;; Defined at:
   209 ;;		line 21 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;  DELAY_CNT       2    0[BANK0 ] unsigned int 
   212 ;; Auto vars:     Size  Location     Type
   213 ;;  i               2    2[BANK0 ] unsigned int 
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    0[BANK0 ] void 
   216 ;; Registers used:
   217 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMMON   BANK0
   223 ;;      Params:         0       2
   224 ;;      Locals:         0       2
   225 ;;      Temps:          0       0
   226 ;;      Totals:         0       4
   227 ;;Total ram usage:        4 bytes
   228 ;; Hardware stack levels used:    1
   229 ;; This function calls:
   230 ;;		Nothing
   231 ;; This function is called by:
   232 ;;		_main
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _Delay_us
   238  1AB                     _Delay_us:	
   239                           
   240                           ;main.c: 22: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   241  1AB  06B                	clrf	Delay_us@i
   242  1AC  06C                	clrf	Delay_us@i+1
   243  1AD                     l470:	
   244  1AD  20A                	movf	Delay_us@DELAY_CNT+1,w
   245  1AE  03D                	movwf	29
   246  1AF  209                	movf	Delay_us@DELAY_CNT,w
   247  1B0  03C                	movwf	28
   248  1B1  21D                	movf	29,w
   249  1B2  08C                	subwf	Delay_us@i+1,w
   250  1B3  743                	skipz
   251  1B4  BB7                	goto	u45
   252  1B5  21C                	movf	28,w
   253  1B6  08B                	subwf	Delay_us@i,w
   254  1B7                     u45:	
   255  1B7  603                	btfsc	3,0
   256  1B8  800                	retlw	0
   257                           
   258                           ;main.c: 23: _delay((unsigned long)((1)*(8000000/4000000.0)));
   259  1B9  BBA                	nop2	;2 cycle nop
   260  1BA  C01                	movlw	1
   261  1BB  03C                	movwf	28
   262  1BC  07D                	clrf	29
   263  1BD  21C                	movf	28,w
   264  1BE  1EB                	addwf	Delay_us@i,f
   265  1BF  603                	skipnc
   266  1C0  2AC                	incf	Delay_us@i+1,f
   267  1C1  21D                	movf	29,w
   268  1C2  1EC                	addwf	Delay_us@i+1,f
   269  1C3  BAD                	goto	l470
   270  1C4                     __end_of_Delay_us:	
   271                           
   272                           	psect	jmp_tab
   273  003                     __pjmp_tab:	
   274                           ;incstack = 0
   275                           ; Regs used in _Delay_us: [wreg-fsr0h+status,2+btemp+0+btemp+1]
   276                           
   277  003                     entry__Delay_us:	
   278  003  BAB                	ljmp	_Delay_us
   279  004                     entry__Delay_ms:	
   280                           ;incstack = 0
   281                           ; Regs used in _Delay_ms: [wreg-fsr0h+status,2+btemp+0+btemp+1]
   282                           
   283  004  BDE                	ljmp	_Delay_ms
   284                           
   285                           	psect	text2
   286  1DE                     __ptext2:	
   287 ;; *************** function _Delay_ms *****************
   288 ;; Defined at:
   289 ;;		line 15 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;  DELAY_CNT       2    0[BANK0 ] unsigned int 
   292 ;; Auto vars:     Size  Location     Type
   293 ;;  i               2    4[BANK0 ] unsigned int 
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    0[BANK0 ] void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0
   303 ;;      Params:         0       2
   304 ;;      Locals:         0       2
   305 ;;      Temps:          0       2
   306 ;;      Totals:         0       6
   307 ;;Total ram usage:        6 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _Delay_ms
   318  1DE                     _Delay_ms:	
   319                           
   320                           ;main.c: 16: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   321  1DE  06D                	clrf	Delay_ms@i
   322  1DF  06E                	clrf	Delay_ms@i+1
   323  1E0                     l462:	
   324  1E0  20A                	movf	Delay_ms@DELAY_CNT+1,w
   325  1E1  03D                	movwf	29
   326  1E2  209                	movf	Delay_ms@DELAY_CNT,w
   327  1E3  03C                	movwf	28
   328  1E4  21D                	movf	29,w
   329  1E5  08E                	subwf	Delay_ms@i+1,w
   330  1E6  743                	skipz
   331  1E7  BEA                	goto	u35
   332  1E8  21C                	movf	28,w
   333  1E9  08D                	subwf	Delay_ms@i,w
   334  1EA                     u35:	
   335  1EA  603                	btfsc	3,0
   336  1EB  800                	retlw	0
   337                           
   338                           ;main.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
   339  1EC  C03                	movlw	3
   340  1ED  02C                	movwf	??_Delay_ms+1
   341  1EE  C97                	movlw	151
   342  1EF  02B                	movwf	??_Delay_ms
   343  1F0                     u57:	
   344  1F0  2EB                	decfsz	??_Delay_ms,f
   345  1F1  BF0                	goto	u57
   346  1F2  2EC                	decfsz	??_Delay_ms+1,f
   347  1F3  BF0                	goto	u57
   348  1F4  BF5                	nop2
   349  1F5  C01                	movlw	1
   350  1F6  03C                	movwf	28
   351  1F7  07D                	clrf	29
   352  1F8  21C                	movf	28,w
   353  1F9  1ED                	addwf	Delay_ms@i,f
   354  1FA  603                	skipnc
   355  1FB  2AE                	incf	Delay_ms@i+1,f
   356  1FC  21D                	movf	29,w
   357  1FD  1EE                	addwf	Delay_ms@i+1,f
   358  1FE  BE0                	goto	l462
   359  1FF                     __end_of_Delay_ms:	
   360  001C                     btemp	set	28	;btemp
   361  001C                     wtemp0	set	28
   362  001E                     wtemp1	set	30
   363  001C                     ttemp0	set	28
   364  001C                     ltemp0	set	28


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21      6       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     178
                           _Delay_ms
                           _Delay_us
 ---------------------------------------------------------------------------------
 (1) _Delay_us                                             4     2      2      89
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2      89
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               15      6       6       3       28.6%
ABS                  0      0       0       4        0.0%
BITBANK0            15      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 29 05:48:07 2017

            __CFG_CP$OFF 0000                       u35 01EA                       u45 01B7  
                     u57 01F0                       fsr 0004                      l462 01E0  
                    l470 01AD                      l484 01CD                      _GP0 0030  
                    _GP1 0031                      _GP2 0032                     _ANS0 003E  
                   _ANS1 003F                     _main 01C4                     btemp 001C  
                   start 0000            __CFG_MCPU$OFF 0000                    ?_main 0009  
          __CFG_WDTE$OFF 0000                    ltemp0 001C                    ttemp0 001C  
                  wtemp0 001C                    wtemp1 001E        Delay_ms@DELAY_CNT 0009  
       __end_of_Delay_ms 01FF         __end_of_Delay_us 01C4           __CFG_MCLRE$OFF 0000  
        __initialization 0001             __end_of_main 01DE                   ??_main 0000  
                 _OPTION 0000  __end_of__initialization 0001           __pcstackCOMMON 0000  
              ?_Delay_ms 0009                ?_Delay_us 0009               __pmaintext 01C4  
             ??_Delay_ms 000B               ??_Delay_us 0000        Delay_us@DELAY_CNT 0009  
                __ptext1 01AB                  __ptext2 01DE     end_of_initialization 0001  
              Delay_ms@i 000D                Delay_us@i 000B      start_initialization 0001  
       __CFG_IOSCFS$8MHZ 0000        __size_of_Delay_ms 0021        __size_of_Delay_us 0019  
         entry__Delay_ms 0004           entry__Delay_us 0003                ___latbits 0000  
          __pcstackBANK0 0009                __pjmp_tab 0003                 _TRISGPIO 0006  
               _Delay_ms 01DE                 _Delay_us 01AB            __size_of_main 001A  
